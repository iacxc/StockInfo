#!/usr/bin/python -O

from bottle import Bottle, run, request
from collections import namedtuple
import socket
import DBUtils

RowType = namedtuple("RowType", ["date", "fund_in", "fund_out",
                                 "fund_in2", "fund_out2",
                                 "price"])
app = Bottle()

def f_fund(fund):
    """ decrate the fund, if positive, use green; negative, use red
    """
    if fund > 0:
        return "<font color=red>%.1f</font>" % fund
    elif fund < 0:
        return "<font color=green>%.1f</font>" % fund
    else:
        return "%.1f" % fund


@app.route("/")
def hello():
    return "Hello"


@app.route("/stock_fund")
def stock_fund():
    limit = request.query.limit or '50'
    db = DBUtils.get_db()

    code_info = DBUtils.get_codeinfo(db)

    h_tables = []
    cursor = db.cursor()
    for info in code_info:

        tablename = "T{0}".format(info[0])
        querystr = """SELECT {0}
        FROM {1}
        ORDER BY date DESC LIMIT {2}""".format(",".join(RowType._fields),
                                              tablename, limit)
        cursor.execute(querystr)

        #table header
        tlines = ["""<tr bgcolor="#a0a0a0">
    <th>{0}</th>
    <th>Date</th>
    <th>Fund In</th>
    <th>Fund Out</th>
    <th>Fund</th>
    <th>Percent</th>
    <th></th>
    <th>Fund In</th>
    <th>Fund Out</th>
    <th>Fund</th>
    <th>Percent</th>
</tr>""".format(info[0])]

        total_funds, total_funds2 = 0, 0
        total_percent, total_percent2 = 0, 0

        rows = [RowType(*row) for row in cursor.fetchall()]

        firstrow = True
        for row in rows:
            row = RowType(*row)
            fund = row.fund_in - row.fund_out
            percent = fund * 100 / (info[1] * row.price)
            fund2 = row.fund_in2 - row.fund_out2
            percent2= fund2* 100 / (info[1] * row.price)

            tlines.append("""<tr bgcolor="#eeeeee">
    {rowheader}
    <td>{date}</td>
    <td align="right">{fund_in}</td>
    <td align="right">{fund_out}</td>
    <td align="right">{fund}</td>
    <td align="right"><b>{percent}</b>%</td>
    {rowheader}
    <td align="right">{fund_in2}</td>
    <td align="right">{fund_out2}</td>
    <td align="right">{fund2}</td>
    <td align="right"><b>{percent2}</b>%</td>
</tr>""".format(rowheader="<td rowspan=%d>&nbsp;</td>" % len(rows)
                                                   if firstrow else "",
                date=row.date,
                fund_in=row.fund_in,
                fund_out=row.fund_out,
                fund=f_fund(fund),
                percent=f_fund(percent),
                fund_in2=row.fund_in2,
                fund_out2=row.fund_out2,
                fund2=f_fund(fund2),
                percent2=f_fund(percent2),
                ))
            total_funds += fund
            total_percent += percent
            total_funds2 += fund2
            total_percent2 += percent2

            firstrow = False

        #table footer
        tlines.append("""<tr bgcolor="#eeeeee">
    <td></td>
    <td>Total</td>
    <td></td>
    <td></td>
    <td align="right">{0}</td>
    <td align="right"><b>{1}</b>%</td>
    <td></td>
    <td></td>
    <td></td>
    <td align="right">{2}</td>
    <td align="right"><b>{3}</b>%</td>
</tr>""".format(f_fund(total_funds),
                f_fund(total_percent),
                f_fund(total_funds2),
                f_fund(total_percent2)))

        h_tables.append("""<br/>
<table border=0 bgcolor="#404040" cellspacing="1" cellpadding="5">
<col width="70">
<col width="100">
<col width="70">
<col width="80">
<col width="70">
<col width="70">
<col width="10">
<col width="70">
<col width="80">
<col width="70">
<col width="70">
{tbody}
</table>
<br/>""".format(tbody="\n".join(tlines)))


    html = """<html>
<title>Stock Funds</title>
<style type="text/css">
body {{
    font-family: Aria, Helvetica;
}}
</style>
<body>
{0}
</body>
</html>
""".format("\n".join(h_tables))

    return html


run(app, host=socket.getfqdn(), port=8088, debug=True)
